###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "../c:\\Users\\anerli\\Sync\\projects\\dnd5e-chatbot\\volo\\baml_src\\archivist.baml": "// class FollowupLookups {\r\n\r\n// }\r\nclass ArchivistFollowup {\r\n    question string\r\n    url string\r\n}\r\n\r\nclass ArchivistFollowups {\r\n    queries ArchivistFollowup[]\r\n}\r\n\r\nclass ArchivistAnswer {\r\n    answer string\r\n}\r\n\r\n\r\nfunction RecursiveLookup(question: string, current_endpoint: string, api_content: string) -> ArchivistFollowups | ArchivistAnswer {\r\n    client Archivist\r\n    prompt #\"\r\n        You are an archivist for DND 5e reference material.\r\n\r\n        You are collecting resources pertaining to this query:\r\n        {{ question }}\r\n\r\n        To do so, you observe the output of a DND 5e API call already made to a certain endpoint, and either:\r\n        (1) Answer the question if the provided information is sufficient\r\n        or\r\n        (2) Make followup queries using URLs in the output, which will be relayed to another archivist.\r\n\r\n        API Information for {{ current_endpoint }}:\r\n        {{ api_content }}\r\n\r\n        {{ ctx.output_format }}\r\n    \"#\r\n}\r\n\r\ntest how_many_conditions_pt1 {\r\n    functions [RecursiveLookup]\r\n    args {\r\n        question \"How many conditions are there?\"\r\n        current_endpoint \"/api\"\r\n        api_content #\"\r\n            {\r\n                \"ability-scores\": \"/api/ability-scores\",\r\n                \"alignments\": \"/api/alignments\",\r\n                \"backgrounds\": \"/api/backgrounds\",\r\n                \"classes\": \"/api/classes\",\r\n                \"conditions\": \"/api/conditions\",\r\n                \"damage-types\": \"/api/damage-types\",\r\n                \"equipment\": \"/api/equipment\",\r\n                \"equipment-categories\": \"/api/equipment-categories\",\r\n                \"feats\": \"/api/feats\",\r\n                \"features\": \"/api/features\",\r\n                \"languages\": \"/api/languages\",\r\n                \"magic-items\": \"/api/magic-items\",\r\n                \"magic-schools\": \"/api/magic-schools\",\r\n                \"monsters\": \"/api/monsters\",\r\n                \"proficiencies\": \"/api/proficiencies\",\r\n                \"races\": \"/api/races\",\r\n                \"rule-sections\": \"/api/rule-sections\",\r\n                \"rules\": \"/api/rules\",\r\n                \"skills\": \"/api/skills\",\r\n                \"spells\": \"/api/spells\",\r\n                \"subclasses\": \"/api/subclasses\",\r\n                \"subraces\": \"/api/subraces\",\r\n                \"traits\": \"/api/traits\",\r\n                \"weapon-properties\": \"/api/weapon-properties\"\r\n            }\r\n        \"#\r\n    }\r\n}\r\n\r\ntest how_many_conditions_pt2 {\r\n    functions [RecursiveLookup]\r\n    args {\r\n        question \"How many conditions are there?\"\r\n        current_endpoint \"/api/conditions\"\r\n        api_content #\"\r\n            {\r\n                \"count\": 15,\r\n                \"results\": [\r\n                    {\r\n                        \"index\": \"blinded\",\r\n                        \"name\": \"Blinded\",\r\n                        \"url\": \"/api/conditions/blinded\"\r\n                    },\r\n                    {\r\n                        \"index\": \"charmed\",\r\n                        \"name\": \"Charmed\",\r\n                        \"url\": \"/api/conditions/charmed\"\r\n                    },\r\n                    {\r\n                        \"index\": \"deafened\",\r\n                        \"name\": \"Deafened\",\r\n                        \"url\": \"/api/conditions/deafened\"\r\n                    },\r\n                    {\r\n                        \"index\": \"exhaustion\",\r\n                        \"name\": \"Exhaustion\",\r\n                        \"url\": \"/api/conditions/exhaustion\"\r\n                    },\r\n                    {\r\n                        \"index\": \"frightened\",\r\n                        \"name\": \"Frightened\",\r\n                        \"url\": \"/api/conditions/frightened\"\r\n                    },\r\n                    {\r\n                        \"index\": \"grappled\",\r\n                        \"name\": \"Grappled\",\r\n                        \"url\": \"/api/conditions/grappled\"\r\n                    },\r\n                    {\r\n                        \"index\": \"incapacitated\",\r\n                        \"name\": \"Incapacitated\",\r\n                        \"url\": \"/api/conditions/incapacitated\"\r\n                    },\r\n                    {\r\n                        \"index\": \"invisible\",\r\n                        \"name\": \"Invisible\",\r\n                        \"url\": \"/api/conditions/invisible\"\r\n                    },\r\n                    {\r\n                        \"index\": \"paralyzed\",\r\n                        \"name\": \"Paralyzed\",\r\n                        \"url\": \"/api/conditions/paralyzed\"\r\n                    },\r\n                    {\r\n                        \"index\": \"petrified\",\r\n                        \"name\": \"Petrified\",\r\n                        \"url\": \"/api/conditions/petrified\"\r\n                    },\r\n                    {\r\n                        \"index\": \"poisoned\",\r\n                        \"name\": \"Poisoned\",\r\n                        \"url\": \"/api/conditions/poisoned\"\r\n                    },\r\n                    {\r\n                        \"index\": \"prone\",\r\n                        \"name\": \"Prone\",\r\n                        \"url\": \"/api/conditions/prone\"\r\n                    },\r\n                    {\r\n                        \"index\": \"restrained\",\r\n                        \"name\": \"Restrained\",\r\n                        \"url\": \"/api/conditions/restrained\"\r\n                    },\r\n                    {\r\n                        \"index\": \"stunned\",\r\n                        \"name\": \"Stunned\",\r\n                        \"url\": \"/api/conditions/stunned\"\r\n                    },\r\n                    {\r\n                        \"index\": \"unconscious\",\r\n                        \"name\": \"Unconscious\",\r\n                        \"url\": \"/api/conditions/unconscious\"\r\n                    }\r\n                ]\r\n            }\r\n        \"#\r\n    }\r\n}\r\n\r\ntest dragons_pt1 {\r\n    functions [RecursiveLookup]\r\n    args {\r\n        question \"Please provide a comprehensive overview of dragon types in D&D 5e, including chromatic, metallic, and other dragon classifications, their environments, and key characteristics.\"\r\n        current_endpoint \"/api\"\r\n        api_content #\"\r\n            {\r\n                \"ability-scores\": \"/api/ability-scores\",\r\n                \"alignments\": \"/api/alignments\",\r\n                \"backgrounds\": \"/api/backgrounds\",\r\n                \"classes\": \"/api/classes\",\r\n                \"conditions\": \"/api/conditions\",\r\n                \"damage-types\": \"/api/damage-types\",\r\n                \"equipment\": \"/api/equipment\",\r\n                \"equipment-categories\": \"/api/equipment-categories\",\r\n                \"feats\": \"/api/feats\",\r\n                \"features\": \"/api/features\",\r\n                \"languages\": \"/api/languages\",\r\n                \"magic-items\": \"/api/magic-items\",\r\n                \"magic-schools\": \"/api/magic-schools\",\r\n                \"monsters\": \"/api/monsters\",\r\n                \"proficiencies\": \"/api/proficiencies\",\r\n                \"races\": \"/api/races\",\r\n                \"rule-sections\": \"/api/rule-sections\",\r\n                \"rules\": \"/api/rules\",\r\n                \"skills\": \"/api/skills\",\r\n                \"spells\": \"/api/spells\",\r\n                \"subclasses\": \"/api/subclasses\",\r\n                \"subraces\": \"/api/subraces\",\r\n                \"traits\": \"/api/traits\",\r\n                \"weapon-properties\": \"/api/weapon-properties\"\r\n            }\r\n        \"#\r\n    }\r\n}\r\n",
    "../c:\\Users\\anerli\\Sync\\projects\\dnd5e-chatbot\\volo\\baml_src\\clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\r\n\r\nclient<llm> Archivist {\r\n  provider anthropic\r\n  retry_policy Constant\r\n  options {\r\n    model \"claude-3-5-haiku-latest\"\r\n    api_key env.ANTHROPIC_API_KEY\r\n    temperature 0.0\r\n  }\r\n}\r\n\r\nclient<llm> CustomGPT4o {\r\n  provider openai\r\n  options {\r\n    model \"gpt-4o\"\r\n    api_key env.OPENAI_API_KEY\r\n  }\r\n}\r\n\r\nclient<llm> CustomGPT4oMini {\r\n  provider openai\r\n  retry_policy Exponential\r\n  options {\r\n    model \"gpt-4o-mini\"\r\n    api_key env.OPENAI_API_KEY\r\n  }\r\n}\r\n\r\nclient<llm> CustomSonnet {\r\n  provider anthropic\r\n  options {\r\n    model \"claude-3-5-sonnet-20241022\"\r\n    api_key env.ANTHROPIC_API_KEY\r\n  }\r\n}\r\n\r\nclient<llm> CustomHaiku {\r\n  provider anthropic\r\n  retry_policy Constant\r\n  options {\r\n    model \"claude-3-5-haiku-latest\"\r\n    api_key env.ANTHROPIC_API_KEY\r\n  }\r\n}\r\n\r\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\r\nclient<llm> CustomFast {\r\n  provider round-robin\r\n  options {\r\n    // This will alternate between the two clients\r\n    strategy [CustomGPT4oMini, CustomHaiku]\r\n  }\r\n}\r\n\r\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\r\nclient<llm> OpenaiFallback {\r\n  provider fallback\r\n  options {\r\n    // This will try the clients in order until one succeeds\r\n    strategy [CustomGPT4oMini, CustomGPT4oMini]\r\n  }\r\n}\r\n\r\n// https://docs.boundaryml.com/docs/snippets/clients/retry\r\nretry_policy Constant {\r\n  max_retries 3\r\n  // Strategy is optional\r\n  strategy {\r\n    type constant_delay\r\n    delay_ms 200\r\n  }\r\n}\r\n\r\nretry_policy Exponential {\r\n  max_retries 2\r\n  // Strategy is optional\r\n  strategy {\r\n    type exponential_backoff\r\n    delay_ms 300\r\n    mutliplier 1.5\r\n    max_delay_ms 10000\r\n  }\r\n}",
    "../c:\\Users\\anerli\\Sync\\projects\\dnd5e-chatbot\\volo\\baml_src\\generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../volo\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.68.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
    "../c:\\Users\\anerli\\Sync\\projects\\dnd5e-chatbot\\volo\\baml_src\\resume.baml": "// Defining a data model.\r\nclass Resume {\r\n  name string\r\n  email string\r\n  experience string[]\r\n  skills string[]\r\n}\r\n\r\n// Create a function to extract the resume from a string.\r\nfunction ExtractResume(resume: string) -> Resume {\r\n  // Specify a client as provider/model-name\r\n  // you can use custom LLM params with a custom client name from clients.baml like \"client CustomHaiku\"\r\n  client \"openai/gpt-4o\" // Set OPENAI_API_KEY to use this client.\r\n  prompt #\"\r\n    Extract from this content:\r\n    {{ resume }}\r\n\r\n    {{ ctx.output_format }}\r\n  \"#\r\n}\r\n\r\n// Test the function with a sample resume. Open the VSCode playground to run this.\r\ntest vaibhav_resume {\r\n  functions [ExtractResume]\r\n  args {\r\n    resume #\"\r\n      Vaibhav Gupta\r\n      vbv@boundaryml.com\r\n\r\n      Experience:\r\n      - Founder at BoundaryML\r\n      - CV Engineer at Google\r\n      - CV Engineer at Microsoft\r\n\r\n      Skills:\r\n      - Rust\r\n      - C++\r\n    \"#\r\n  }\r\n}\r\n",
    "../c:\\Users\\anerli\\Sync\\projects\\dnd5e-chatbot\\volo\\baml_src\\volo.baml": "\r\nclass VoloResponse {\r\n    response string\r\n}\r\n\r\nclass ContactArchivist {\r\n    user_roleplay_message string\r\n    archivist_query string\r\n}\r\n\r\ntemplate_string VoloSystem() #\"\r\nYou are a DND 5e chatbot which assists players and dungeon masters with various queries.\r\nYou should be direct with your answers, but your tone should somewhat follow that of Volothamp Geddarm.\r\nDo not use roleplay action text with asterisks in your response. \r\nDo not introduce yourself and get right to the point.\r\n\"#\r\n\r\nclass ChatHistoryItem {\r\n    user_query string\r\n    volo_response string\r\n}\r\n\r\nfunction VoloChatWithContext(query: string, history: ChatHistoryItem[], archivist_context: string) -> string {\r\n    client CustomHaiku\r\n    prompt #\"\r\n        {{ _.role(\"system\") }}\r\n        {{ VoloSystem() }}\r\n\r\n        You have collected this information possibly pertaining to the user's question, which you may use to create your response:\r\n        {{ archivist_context }}\r\n\r\n        {% for item in history %}\r\n        {{ _.role(\"user\") }}\r\n        {{ item.user_query}}\r\n        {{ _.role(\"assistant\") }}\r\n        {{ item.volo_response}}\r\n        {% endfor %}\r\n\r\n        {{ _.role(\"user\") }}\r\n        {{ query }}\r\n    \"#\r\n}\r\n\r\nfunction VoloChat(query: string, history: ChatHistoryItem[]) -> VoloResponse | ContactArchivist {\r\n    client CustomHaiku\r\n    prompt #\"\r\n        {{ _.role(\"system\") }}\r\n        {{ VoloSystem() }}\r\n\r\n        When the users asks for detailed or specific information, or asks a question which implies they may want such information,\r\n        you should not respond directly and instead ask the archivist.\r\n        The archivist is an LLM agent with access to all information pertaining to DnD 5e.\r\n        If you need to contact the archivist, you'll also provide a brief in-character roleplay message that indicates you're looking for the information.\r\n        \r\n        {{ ctx.output_format }}\r\n\r\n        {% for item in history %}\r\n        {{ _.role(\"user\") }}\r\n        {{ item.user_query}}\r\n        {{ _.role(\"assistant\") }}\r\n        {{ item.volo_response}}\r\n        {% endfor %}\r\n\r\n        {{ _.role(\"user\") }}\r\n        {{ query }}\r\n    \"#\r\n}\r\n\r\ntest foo {\r\n    functions [VoloChat]\r\n    args {\r\n        query \"Tell me about different types of dragons\"\r\n    }\r\n}",
}

def get_baml_files():
    return file_map